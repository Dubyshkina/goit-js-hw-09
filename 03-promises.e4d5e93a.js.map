{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACPN,EACFI,EAAQ,uBAAwCG,OAAfT,EAAS,QAAYS,OAANR,EAAM,OAGpDM,EAAK,sBAAqCE,OAAfT,EAAS,QAAYS,OAANR,EAAM,M,GAEnDA,E,IAMLL,EAAKc,iBAAiB,UAAU,SAACC,GAC/BA,EAAMC,iBAIJ,IAHF,IAAIX,EAAQY,OAAOjB,EAAKK,MAAMa,OAC1BC,EAAOF,OAAOjB,EAAKmB,KAAKD,OACxBE,EAASH,OAAOjB,EAAKoB,OAAOF,OACrBd,EAAW,EAAGA,GAAYgB,EAAShB,GAAY,EACtDD,EAAcC,EAAUC,GAAOgB,MAAK,SAAAX,GACpCZ,EAAAwB,OAAOC,QAAQb,E,IACbc,OAAM,SAAAb,GACRb,EAAAwB,OAAOG,QAAQd,E,IAEhBN,GAAOc,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } \n    else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n  });\n}\n\n\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  let delay = Number(form.delay.value);\n  let step = Number(form.step.value);\n  let amount = Number(form.amount.value);\n    for (let position = 1; position <= amount ; position += 1) {\n      createPromise(position, delay).then(resolve => {\n      Notify.success(resolve);\n     }).catch(reject => {\n      Notify.failure(reject);\n     });\n     delay+=step;\n   }\n  });\n\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","concat","addEventListener","event","preventDefault","Number","value","step","amount","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.e4d5e93a.js.map"}