{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAOC,SAASC,cAAc,SAEpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACPN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAG5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CAMXL,EAAKa,iBAAiB,UAAWC,IAC/BA,EAAMC,iBACN,IAAIV,EAAQW,OAAOhB,EAAKK,MAAMY,OAC1BC,EAAOF,OAAOhB,EAAKkB,KAAKD,OACxBE,EAASH,OAAOhB,EAAKmB,OAAOF,OAC9B,IAAK,IAAIb,EAAW,EAAGA,GAAYe,EAASf,GAAY,EACtDD,EAAcC,EAAUC,GAAOe,MAAKV,IACpCZ,EAAAuB,OAAOC,QAAQZ,EAAQ,IACrBa,OAAMZ,IACRb,EAAAuB,OAAOG,QAAQb,EAAO,IAEvBN,GAAOa,C","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\n\nconst form = document.querySelector('.form');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    if (shouldResolve) {\n      resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    } \n    else {\n      reject(`❌ Rejected promise ${position} in ${delay}ms`);\n    }\n  }, delay);\n  });\n}\n\n\n\nform.addEventListener(\"submit\", (event) => {\n  event.preventDefault();\n  let delay = Number(form.delay.value);\n  let step = Number(form.step.value);\n  let amount = Number(form.amount.value);\n    for (let position = 1; position <= amount ; position += 1) {\n      createPromise(position, delay).then(resolve => {\n      Notify.success(resolve);\n     }).catch(reject => {\n      Notify.failure(reject);\n     });\n     delay+=step;\n   }\n  });\n\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","Number","value","step","amount","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.224c69ae.js.map"}